swagger: '2.0'
info:
  version: 3.0.0
  title: SuperOn API
  
  description:
    This API allows access to SuperOn's e-commerce platform. 
    
    This API will evolve incrementaly under this major version maintaining backward compatibility. That means that new keys may be added to the objects bellow and you should foresee that. The object keys, once provided, won't be removed or have their type modified in the same major API version. 
    
    For more information about SuperOn, see http://lifeapps.com.br/superon or send us a message at contato@lifeapps.com.br.
    
  license: 
    name: Superon API Terms of Use
    url: 'http://lifeapps.com.br/superon/api-usage-license'
  contact:
    email: contato@lifeapps.com.br
host: 'localhost:3000'
basePath: '/api/v3'

schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  '/orders/ready-to-deliver':
    
    get:
      tags: 
        - "Order Cicle"
      description: 'Returns orders in the state "Ready to Deliver"'
      operationId: 'get-all-orders-ready-to-deliver'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrdersResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/price/batch':
    post:
      tags:
        - "Configuration"
      description: 'Provides batch update for prices on a certain supplier. This allows 
      multiple products to be updated and the total payload should have less than 1Mb.'
      parameters:
       - name: body
         in: body
         required: true
         description: A batch for price update. This should contain at least one item. This is an async operation and will process in some moment in the future.
         schema:
          $ref: '#/definitions/PriceBatchRequest'
            
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SimpleOk'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/swagger':
    x-swagger-pipe: swagger_raw
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: >
      For accessing the API a valid JWT (jwt.io) token must be passed in all the
      queries in the 'Authorization' header. If you need a JWT token, mail
      contato@lifeapps.com.br for further instructions
      The following syntax must be used in the 'Authorization' header 
          "Bearer xxxxxx.yyyyyyy.zzzzzz"
security: 
  - Bearer: []
  
definitions:
  SimpleOk:
    properties:
      ok:
        type: boolean
        description: 'Will return "true" once the batch has been accepted for processing. This is processing is asyncronous/non-blocking'
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
      code:
        type: number
      cause:
        type: string
  ProductResponse:
    properties:
      idproduct: 
        type: string
  OrdersResponse:
    properties: 
      numorder:
        type: number
      idorder:
        type: string
        description: "A UUID that identifies this order"
      date:
        type: string
        description: "Date in ISO-8651 format (2007-03-01T13:00:00Z)"
      products:
        type: "array"
        description: "List of products that compose this order"
        items:
            $ref: "#/definitions/ProductResponse"
  PriceBatchRequest:
    properties:
      notes:
        type: string
        description: An arbitrary non mandatory note about this price update
      items:
        type: array
        minimum: 1
        items:
          $ref: '#/definitions/PriceBatchItemRequest'
  PriceBatchItemRequest:
    description: Represents a price update for that product. Send EITHER the internalcode or the barcode. If a product has a barcode, that should be used.
    properties:
      internalcode:
        type: number
        description: A product internal code. This exists for products that do not have a common barcode
      barcode:
        type: number
        description: A product barcode
      price:
        type: number
        description: Product new price
      availablefororder:
        type: boolean
        description: Determines if this product should be made available for final consumers (true) or if it should be hidden and made unavailable until further updates
            
            
            
            